// import jsPDF from 'jspdf';
// import autoTable from 'jspdf-autotable';
// import { Sale } from '../types';

// export const generatePDF = (sale: Sale) => {
//   const doc = new jsPDF();
  
//   // Company header
//   doc.setFontSize(20);
//   doc.setTextColor(0, 188, 212); // Cyan color
//   doc.text('StockFlow', 20, 25);
  
//   doc.setFontSize(12);
//   doc.setTextColor(100, 100, 100);
//   doc.text('Modern Stock Management System', 20, 35);
  
//   // Receipt details
//   doc.setFontSize(16);
//   doc.setTextColor(0, 0, 0);
//   doc.text('Sales Receipt', 20, 55);
  
//   doc.setFontSize(10);
//   doc.text(`Receipt #: ${String(sale.id)}`, 20, 70);
//   doc.text(`Date: ${new Date(sale.timestamp).toLocaleDateString()}`, 20, 80);
//   doc.text(`Time: ${new Date(sale.timestamp).toLocaleTimeString()}`, 20, 90);
  
//   // Items table
//   // const tableData = sale.items.map(item => [
//   //   item.name,
//   //   item.quantity.toString(),
//   //   `$${item.unitPrice.toFixed(2)}`,
//   //   `$${item.totalPrice.toFixed(2)}`
//   // ]);

//   const tableData = sale.items.map(item => [
//     item.name || 'Unknown',
//     (item.quantity ?? 0).toString(),
//     `$${(item.unitPrice ?? 0).toFixed(2)}`,
//     `$${((item.soldPrice ?? item.unitPrice) * item.quantity).toFixed(2)}`
//   ]);

  
//   autoTable(doc, {
//     startY: 100,
//     head: [['Product', 'Quantity', 'Unit Price', 'Total']],
//     body: tableData,
//     theme: 'striped',
//     headStyles: {
//       fillColor: [0, 188, 212], // Cyan color
//       textColor: [255, 255, 255],
//       fontSize: 10,
//       fontStyle: 'bold'
//     },
//     bodyStyles: {
//       fontSize: 9,
//       textColor: [60, 60, 60]
//     },
//     alternateRowStyles: {
//       fillColor: [245, 245, 245]
//     },
//     margin: { left: 20, right: 20 },
//   });
  
//   // Total
//   const finalY = (doc as any).lastAutoTable.finalY || 150;
//   doc.setFontSize(12);
//   doc.setTextColor(0, 0, 0);
  
//   // Add separator line
//   doc.setLineWidth(0.5);
//   doc.line(20, finalY + 10, 190, finalY + 10);
  
//   doc.setFontSize(14);
//   doc.setFont('helvetica', 'bold');
//   doc.text(`Total Amount: $${sale.totalAmount.toFixed(2)}`, 20, finalY + 25);
  
//   // Footer
//   doc.setFontSize(8);
//   doc.setFont('helvetica', 'normal');
//   doc.setTextColor(100, 100, 100);
//   doc.text('Thank you for your business!', 20, finalY + 45);
//   doc.text('Generated by StockFlow - Modern Stock Management', 20, finalY + 55);
//   doc.text(`Generated on: ${new Date().toLocaleString()}`, 20, finalY + 65);
  
//   // Add a subtle border
//   doc.setDrawColor(200, 200, 200);
//   doc.setLineWidth(1);
//   doc.rect(10, 10, 190, 277); // A4 size border
  
//   // Save the PDF
//   doc.save(`receipt-${String(sale.id)}.pdf`);
// };

import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
import { Sale } from '../types';

export const generatePDF = (sale: Sale) => {
  const doc = new jsPDF();

  // Header: Company Info
  doc.setFontSize(20);
  doc.setTextColor(0, 188, 212);
  doc.text('StockFlow', 20, 25);

  doc.setFontSize(12);
  doc.setTextColor(100, 100, 100);
  doc.text('Modern Stock Management System', 20, 35);

  // Title
  doc.setFontSize(16);
  doc.setTextColor(0, 0, 0);
  doc.text('Sales Receipt', 20, 55);

  // Receipt Info
  doc.setFontSize(10);
  doc.text(`Receipt #: ${String(sale.id)}`, 20, 70);
  doc.text(`Date: ${new Date(sale.timestamp ?? '').toLocaleDateString()}`, 20, 80);
  doc.text(`Time: ${new Date(sale.timestamp ?? '').toLocaleTimeString()}`, 20, 90);

  // Calculate Totals
  const subtotal = sale.items.reduce(
    (sum, item) => sum + (item.soldPrice ?? item.unitPrice) * item.quantity,
    0
  );
  const taxRate = 0.0; // Example: 0% tax
  const taxAmount = subtotal * taxRate;
  const discount = 0; // Add discount logic if needed
  const totalAmount = subtotal + taxAmount - discount;

  // Build table data
  const tableData = sale.items.map(item => [
    item.name || 'Unknown',
    (item.quantity ?? 0).toString(),
    `$${(item.soldPrice ?? item.unitPrice).toFixed(2)}`,
    `$${((item.soldPrice ?? item.unitPrice) * item.quantity).toFixed(2)}`
  ]);

  // Generate table
  autoTable(doc, {
    startY: 100,
    head: [['Product', 'Quantity', 'Unit Price', 'Total']],
    body: tableData,
    theme: 'striped',
    headStyles: {
      fillColor: [0, 188, 212],
      textColor: [255, 255, 255],
      fontSize: 10,
      fontStyle: 'bold'
    },
    bodyStyles: {
      fontSize: 9,
      textColor: [60, 60, 60]
    },
    alternateRowStyles: {
      fillColor: [245, 245, 245]
    },
    margin: { left: 20, right: 20 },
  });

  const finalY = (doc as any).lastAutoTable.finalY || 150;

  // Add totals section
  doc.setFontSize(12);
  doc.setTextColor(0, 0, 0);
  doc.setLineWidth(0.5);
  doc.line(20, finalY + 10, 190, finalY + 10);

  const lineStart = finalY + 20;
  let currentY = lineStart;

  const addRow = (label: string, value: string) => {
    doc.setFont('helvetica', 'normal');
    doc.text(label, 120, currentY);
    doc.text(value, 170, currentY, { align: 'right' });
    currentY += 8;
  };

  doc.setFont('helvetica', 'bold');
  doc.setFontSize(12);
  addRow('Subtotal:', `$${subtotal.toFixed(2)}`);
  addRow('Tax (5%):', `$${taxAmount.toFixed(2)}`);
  if (discount > 0) addRow('Discount:', `- $${discount.toFixed(2)}`);
  addRow('Total Amount:', `$${totalAmount.toFixed(2)}`);

  // Signature Line
  currentY += 10;
  doc.setLineWidth(0.2);
  doc.line(120, currentY, 190, currentY);
  doc.setFontSize(8);
  doc.text('Authorized Signature', 150, currentY + 5, { align: 'center' });

  // Footer
  doc.setFontSize(8);
  doc.setFont('helvetica', 'normal');
  doc.setTextColor(100, 100, 100);
  doc.text('Thank you for your business!', 20, currentY + 20);
  doc.text('Generated by StockFlow - Modern Stock Management', 20, currentY + 27);
  doc.text(`Generated on: ${new Date().toLocaleString()}`, 20, currentY + 34);

  // Border
  doc.setDrawColor(200, 200, 200);
  doc.setLineWidth(1);
  doc.rect(10, 10, 190, 277); // A4 border

  // Save
  doc.save(`receipt-${String(sale.id)}.pdf`);
};
